parameters:
  - name: destroyAdditionalArguments
    displayName: Additional command options for Terraform destroy command
    type: string
    default: " "
  - name: initAdditionalCommandOptions
    displayName: Additional command options for Terraform init command
    type: string
    default: " "
  - name: version
    displayName: Terraform version to download and install
    type: string
    default: 1.2.5
  - name: workingDirectory
    displayName: Directory where Terraform files are located
    type: string
    default: $(Build.SourcesDirectory)/infrastructure
  - name: workspace
    displayName: Terraform workspace
    type: string

steps:
  - task: TerraformInstaller@0
    displayName: Install Terraform version:${{ parameters.version }}
    name: tfInstall
    inputs:
      terraformVersion: ${{ parameters.version }}

  - task: PowerShell@2
    displayName: Terraform initialise
    inputs:
      targetType: inline
      script: terraform init -no-color ${{ parameters.initAdditionalCommandOptions }}
      errorActionPreference: default
      showWarnings: true
      pwsh: true
      workingDirectory: ${{ parameters.workingDirectory }}
    env:
      TF_IN_AUTOMATION: 0
      TF_INPUT: 0

  - task: PowerShell@2
    displayName: Select Terraform workspace
    inputs:
      targetType: inline
      script: |
        $lowerWorkspace='${{ lower(parameters.workspace) }}'
        terraform workspace select $lowerWorkspace
      errorActionPreference: default
      showWarnings: true
      pwsh: true
      workingDirectory: ${{ parameters.workingDirectory }}
    env:
      TF_IN_AUTOMATION: 0
      TF_INPUT: 0

  - task: PowerShell@2
    displayName: Terraform destroy
    inputs:
      targetType: inline
      script: terraform destroy -auto-approve -no-color ${{ parameters.destroyAdditionalArguments }}
      errorActionPreference: default
      showWarnings: true
      pwsh: true
      workingDirectory: ${{ parameters.workingDirectory }}
    env:
      TF_IN_AUTOMATION: 0
      TF_INPUT: 0

  - task: PowerShell@2
    displayName: Delete Terraform workspace
    inputs:
      targetType: inline
      script: |
        $lowerWorkspace='${{ lower(parameters.workspace) }}'
        terraform workspace select default
        terraform workspace delete $lowerWorkspace
      errorActionPreference: default
      showWarnings: true
      pwsh: true
      workingDirectory: ${{ parameters.workingDirectory }}
